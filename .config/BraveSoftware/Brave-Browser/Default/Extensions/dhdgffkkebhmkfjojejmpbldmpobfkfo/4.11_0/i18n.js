'use strict';(()=>{Registry.require(["helper","promise"],()=>{let q={},r={},g=null;const h=[],k=Registry.get("helper"),p=Registry.get("promise"),t=function(b){let a=b,c=Array.prototype.slice.call(arguments,1);1==c.length&&"Array"===k.toType(c[0])&&(c=c[0]);const d=/(^|_)0[a-zA-Z]+0(_|$)/;for(let e=0;e<c.length;e++){const f=a.match(d);if(!f){console.log("getMessage(): wrong argument count!!!");break}a=a.replace(d,(f[1]?" ":"")+c[e]+(f[2]?" ":""))}return a.replace(/_/g," ")},A=(b,a)=>{let c=b.message;
1==a.length&&"Array"===k.toType(a[0])&&(a=a[0]);b.placeholders&&Object.keys(b.placeholders).forEach(d=>{try{const e=Number(b.placeholders[d].content.replace(/^\$/,""))-1;let f;e<a.length?(f=a[e],c=c.replace("$"+d+"$",f)):console.log("i18n: invalid argument count on processing '"+c+"' with args "+JSON.stringify(a))}catch(e){console.log("i18n: error processing '"+c+"' with args "+JSON.stringify(a))}});return c},u=function(b){const a=[arguments[0]],c=[],d=e=>{for(let f=0;f<e.length;f++)"Array"===k.toType(e[f])?
d(e[f]):c.push(String(e[f]))};d(Array.prototype.slice.call(arguments,1));c.length&&a.push(c);return rea.i18n.getMessage.apply(this,a)},v=b=>{const a=p();Registry.getRaw("_locales/"+b+"/messages.json",c=>{try{if(c)return a.resolve(JSON.parse(c))}catch(d){console.log("i18n: parsing locale "+b+" failed!")}a.reject()});return a.promise()};var w=b=>{const a=p();b=b.concat("en");let c=-1;const d=()=>{c++;if(c<b.length){const e=b[c];if(!e||!B.includes(e))return d();v(e).then(f=>{q=f;if(!l&&"en"!=e)return v("en").then(m=>
{r=m||{}})}).then(()=>{a.resolve(e)}).fail(()=>{d()})}else a.resolve()};d();return a.promise()},n=b=>b?k.map(b.replace(/-/g,"_").split("_"),(a,c)=>c?a.toUpperCase():a.toLowerCase()).join("_"):b;const y=(b,a)=>{let c,d;a=a||(g?[g,g.split("_")[0]].concat(h).filter(e=>e):h);k.each(a,(e,f)=>{k.each(b,(m,x)=>{m=n(m);const C=m.split(/_/)[0];if(m==e)return d=x,!1;C==e&&(void 0===c||f<c)&&(d=x,c=f)});if(void 0!==d)return!1});return d},z=[{name:"Arabic - \u200e\u202b\u0627\u0644\u0639\u0631\u0628\u064a\u0629\u202c\u200e",
value:"ar"},{name:"Chinese (Simplified) - \u4e2d\u6587\uff08\u7b80\u4f53\u4e2d\u6587\uff09",value:"zh_CN"},{name:"Chinese (Traditional) - \u4e2d\u6587\uff08\u7e41\u9ad4\uff09",value:"zh_TW"},{name:"Croatian - hrvatski",value:"hr"},{name:"Czech - \u010de\u0161tina",value:"cs"},{name:"English",value:"en"},{name:"French - fran\u00e7ais",value:"fr"},{name:"German - Deutsch",value:"de"},{name:"Hindi - \u0939\u093f\u0928\u094d\u0926\u0940",value:"hi"},{name:"Hungarian - magyar",value:"hu"},{name:"Indonesian - Indonesia",
value:"id"},{name:"Italian - italiano",value:"it"},{name:"Japanese - \u65e5\u672c\u8a9e",value:"ja"},{name:"Korean - \ud55c\uad6d\uc5b4",value:"ko"},{name:"Norwegian - norsk",value:"nb"},{name:"Polish - polski",value:"pl"},{name:"Portuguese (Brazil) - portugu\u00eas (Brasil)",value:"pt_BR"},{name:"Portuguese (Portugal) - portugu\u00eas (Portugal)",value:"pt_PT"},{name:"Russian - \u0440\u0443\u0441\u0441\u043a\u0438\u0439",value:"ru"},{name:"Serbian - \u0441\u0440\u043f\u0441\u043a\u0438",value:"sr"},
{name:"Slovak - sloven\u010dina",value:"sk"},{name:"Spanish - espa\u00f1ol",value:"es"},{name:"Turkish - T\u00fcrk\u00e7e",value:"tr"},{name:"Ukrainian - \u0443\u043a\u0440\u0430\u0457\u043d\u0441\u044c\u043a\u0430",value:"uk"},{name:"Vietnamese - Ti\u1ebfng Vi\u1ec7t",value:"vi"}];var B=z.map(b=>b.value),l="undefined"!==typeof rea?rea.i18n.native_support:!1;Registry.register("i18n","e1582c36",{init:()=>{const b=()=>{const c=p();g||l?c.resolve():w(h).then(d=>{g=d}).always(c.resolve);return c.promise()},
a=n(l?rea.i18n.getUILanguage():navigator.language);if(a){const c=[a],d=a.split(/_/);d[0]!==a&&c.push(d[0]);c.forEach(e=>{h.unshift(e)})}b().then(()=>{l&&rea.i18n.getAcceptLanguages(c=>{c.forEach(d=>{h.push(n(d))});return b()})})},getMessage:function(b){let a;return g&&(a=q[b]||r[b])?A(a,Array.prototype.slice.call(arguments,1)):l&&(a=u.apply(this,arguments))?a:Registry.isDevVersion("helper")?(a="#"+t.apply(this,arguments).replace(/ /g,"#")+"#",console.warn("i18n:"+a),a):t.apply(this,arguments)},getOriginalMessage:u,
normalizeLocale:n,getTranslation:(b,a)=>{let c,d;if(b&&(d=b[a+"_i18n"])){b[a]&&(d=k.copy(d,{en:b[a]}));const e=Object.keys(d);let f;void 0!==(f=y(e))&&(c=d[e[f]])}return c||b[a]},setLocale:b=>{const a=p();"null"===b&&(b=null);b&&(b=n(b));!b&&l?(g=b,a.resolve()):b!==g?w([b].concat(h).concat([g])).done(c=>{g=c;g!=b&&console.log("i18n: retrieving locale "+b+" failed!")}).always(a.resolve):a.resolve();return a.promise()},getLocale:()=>g,getUiLocale:()=>n(g||l?rea.i18n.getUILanguage():h[0]||navigator.language||
"en"),getBestLocale:y,supported:z})})})();
